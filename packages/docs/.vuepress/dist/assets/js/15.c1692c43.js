(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{461:function(t,a,s){"use strict";s.r(a);var e=s(8),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据"}},[t._v("#")]),t._v(" 数据")]),t._v(" "),s("h4",{attrs:{id:"data-data-idatamodel-void"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#data-data-idatamodel-void"}},[t._v("#")]),t._v(" data(data: IDataModel): void")]),t._v(" "),s("blockquote",[s("p",[t._v("初始化图数据，具体数据格式如下（？标记，为可选参数）")])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[t._v("IDataModel "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    nodes"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" INodeModel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    edges"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" IEdgeModel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unknown")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nINodeModel "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    width"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    height"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    slots"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ISlotModel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unknown")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nIEdgeModel "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    fromNodeId"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    toNodeId"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    fromSlotId"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    toSlotId"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unknown")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("hr"),t._v(" "),s("h2",{attrs:{id:"获取-设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取-设置"}},[t._v("#")]),t._v(" 获取/设置")]),t._v(" "),s("h4",{attrs:{id:"get-key-string-any"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-key-string-any"}},[t._v("#")]),t._v(" get(key: string): any")]),t._v(" "),s("blockquote",[s("p",[t._v("通过 key 值获取属性值。如：")])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[t._v("graph"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'action'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取当前图 action 的配置，graph 为 Graph 实例")]),t._v("\n")])])]),s("h4",{attrs:{id:"set-t-any-key-string-object-val-t"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set-t-any-key-string-object-val-t"}},[t._v("#")]),t._v(" set<T = any>(key: string | object, val?: T)")]),t._v(" "),s("blockquote",[s("p",[t._v("设置/修改属性值。如：")])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[t._v("graph"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'drection'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'LR'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 修改图方向为 LR")]),t._v("\ngraph"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重新初始化数据")]),t._v("\n")])])]),s("hr"),t._v(" "),s("h2",{attrs:{id:"视口操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#视口操作"}},[t._v("#")]),t._v(" 视口操作")]),t._v(" "),s("h4",{attrs:{id:"_1、getzoom-number"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、getzoom-number"}},[t._v("#")]),t._v(" 1、getZoom(): number")]),t._v(" "),s("blockquote",[s("p",[t._v("获取当前视口的缩放比例。")])]),t._v(" "),s("h4",{attrs:{id:"_2、zoom-value-number-void"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、zoom-value-number-void"}},[t._v("#")]),t._v(" 2、zoom(value: number): void")]),t._v(" "),s("blockquote",[s("p",[t._v("改变视口的缩放比例，value 为要缩放到的比例。")])]),t._v(" "),s("h4",{attrs:{id:"_3、translate-x-number-y-number-void"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、translate-x-number-y-number-void"}},[t._v("#")]),t._v(" 3、translate(x: number, y: number): void")]),t._v(" "),s("blockquote",[s("p",[t._v("平移画布的位置; x, y 参数为要平移的距离。")])]),t._v(" "),s("h4",{attrs:{id:"_4、fitview-void"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、fitview-void"}},[t._v("#")]),t._v(" 4、fitView(): void")]),t._v(" "),s("blockquote",[s("p",[t._v("让画布内容自适应视口的大小; 会根据视口大小缩放画布内容。")])]),t._v(" "),s("h4",{attrs:{id:"_5、fitcenter-void"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、fitcenter-void"}},[t._v("#")]),t._v(" 5、fitCenter(): void")]),t._v(" "),s("blockquote",[s("p",[t._v("平移画布内容到画布中心; 只平移画布内容，不缩放。")])]),t._v(" "),s("h4",{attrs:{id:"_6、fullscreen-el-htmlelement-void"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、fullscreen-el-htmlelement-void"}},[t._v("#")]),t._v(" 6、fullScreen(el?: HTMLElement): void")]),t._v(" "),s("blockquote",[s("p",[t._v("全屏展示。参数为需要全屏的 DOM 对象，默认为初始化中配置的画布 DOM 对象；调用会在“全屏/退出全屏”状态切换。")])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"元素操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元素操作"}},[t._v("#")]),t._v(" 元素操作")]),t._v(" "),s("h4",{attrs:{id:"_1、-addnode-item-inodemodel-stack-boolean-inode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、-addnode-item-inodemodel-stack-boolean-inode"}},[t._v("#")]),t._v(" 1、 addNode(item: INodeModel, stack?: boolean): INode")]),t._v(" "),s("p",[s("em",[t._v("新增节点")])]),t._v(" "),s("ul",[s("li",[t._v("item 为添加节点的对象信息。详情可以查看 INodeModel 的数据格式。")]),t._v(" "),s("li",[t._v("stack 为是否将该操作记录到撤回栈里，默认为 true。")]),t._v(" "),s("li",[t._v("新增节点会返回节点实例对象。后面会介绍节点的实例方法。")])]),t._v(" "),s("h4",{attrs:{id:"_2、addedge-item-iedgemodel-stack-boolean-iedge"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、addedge-item-iedgemodel-stack-boolean-iedge"}},[t._v("#")]),t._v(" 2、addEdge(item: IEdgeModel, stack?: boolean): IEdge")]),t._v(" "),s("p",[s("em",[t._v("新增边")])]),t._v(" "),s("ul",[s("li",[t._v("item 为添加边的对象信息。详情可以查看 IEdgeModel 的数据格式。")]),t._v(" "),s("li",[t._v("stack 为是否将该操作记录到撤回栈里，默认为 true。")]),t._v(" "),s("li",[t._v("新增边会返回边的实例对象。后面同样会介绍边的实例方法。")])]),t._v(" "),s("h4",{attrs:{id:"_3、deletenode-id-string-stack-boolean-inode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、deletenode-id-string-stack-boolean-inode"}},[t._v("#")]),t._v(" 3、deleteNode(id: string, stack?: boolean): INode")]),t._v(" "),s("p",[s("em",[t._v("删除节点")])]),t._v(" "),s("ul",[s("li",[t._v("id 为删除节点的 id，可以从节点实例对象上获取。")]),t._v(" "),s("li",[t._v("stack 为是否将该操作记录到撤回栈里，默认为 true。")])]),t._v(" "),s("h4",{attrs:{id:"_4、deleteedge-id-string-stack-boolean-iedge"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、deleteedge-id-string-stack-boolean-iedge"}},[t._v("#")]),t._v(" 4、deleteEdge(id: string, stack?: boolean): IEdge")]),t._v(" "),s("p",[s("em",[t._v("删除边")])]),t._v(" "),s("ul",[s("li",[t._v("id 为删除边的 id，可以从边实例对象上获取。")]),t._v(" "),s("li",[t._v("stack 为是否将该操作记录到撤回栈里，默认为 true。")])]),t._v(" "),s("h4",{attrs:{id:"_5、updatenode-id-string-model-inodemodel-inode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、updatenode-id-string-model-inodemodel-inode"}},[t._v("#")]),t._v(" 5、updateNode(id: string, model: INodeModel): INode")]),t._v(" "),s("p",[s("em",[t._v("更新节点")])]),t._v(" "),s("ul",[s("li",[t._v("id 为更新节点的 id;")]),t._v(" "),s("li",[t._v("model 为修改相关信息。")])]),t._v(" "),s("h4",{attrs:{id:"_6、updateedge-id-string-model-iedgemodel-iedge"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、updateedge-id-string-model-iedgemodel-iedge"}},[t._v("#")]),t._v(" 6、updateEdge(id: string, model?: IEdgeModel): IEdge")]),t._v(" "),s("p",[s("em",[t._v("更新边")])]),t._v(" "),s("ul",[s("li",[t._v("id 为更新边的 id;")]),t._v(" "),s("li",[t._v("model 为修改信息;")]),t._v(" "),s("li",[t._v("注意：边的起始位置和目标位置（fromNodeId, toNodeId, fromSlotId, toSlotId）信息不支持修改。")])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"元素查找"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元素查找"}},[t._v("#")]),t._v(" 元素查找")]),t._v(" "),s("h4",{attrs:{id:"findnode-id-string-number-inode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#findnode-id-string-number-inode"}},[t._v("#")]),t._v(" findNode(id: string | number): INode")]),t._v(" "),s("p",[s("em",[t._v("查找节点元素")])]),t._v(" "),s("ul",[s("li",[t._v("id 为节点的 id，兼容数字和字符串类型。")]),t._v(" "),s("li",[t._v("返回节点实例。")])]),t._v(" "),s("h4",{attrs:{id:"findedge-id-string-number-iedge"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#findedge-id-string-number-iedge"}},[t._v("#")]),t._v(" findEdge(id: string | number): IEdge")]),t._v(" "),s("p",[s("em",[t._v("查找边元素")])]),t._v(" "),s("ul",[s("li",[t._v("id 为边的 id，兼容数字和字符串类型。")]),t._v(" "),s("li",[t._v("返回边实例。")])]),t._v(" "),s("h4",{attrs:{id:"findslot-id-string-number-islot"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#findslot-id-string-number-islot"}},[t._v("#")]),t._v(" findSlot(id: string | number): ISlot")]),t._v(" "),s("p",[s("em",[t._v("查找节点上插槽元素（边和节点相交的位置）")])]),t._v(" "),s("ul",[s("li",[t._v("id 为插槽的 id，兼容数字和字符串类型。")]),t._v(" "),s("li",[t._v("返回插槽实例。")])]),t._v(" "),s("h4",{attrs:{id:"findnodebystate-state-string-inode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#findnodebystate-state-string-inode"}},[t._v("#")]),t._v(" findNodeByState(state: string): INode[]")]),t._v(" "),s("blockquote",[s("p",[t._v("通过状态信息查找节点。返回节点实例对象的数组。")])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[t._v("graph"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findNodeByState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'selected'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取所有被选中状态的接口")]),t._v("\n")])])]),s("h4",{attrs:{id:"findedgebystate-state-string-iedge"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#findedgebystate-state-string-iedge"}},[t._v("#")]),t._v(" findEdgeByState(state: string): IEdge[]")]),t._v(" "),s("p",[s("em",[t._v("通过状态信息查找边")])]),t._v(" "),s("ul",[s("li",[t._v("返回边实例对象的数组。")])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"行为操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#行为操作"}},[t._v("#")]),t._v(" 行为操作")]),t._v(" "),s("h4",{attrs:{id:"addaction-action-string-string-void"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#addaction-action-string-string-void"}},[t._v("#")]),t._v(" addAction(action: string | string[]): void")]),t._v(" "),s("blockquote",[s("p",[t._v("添加默认行为操作。\n参数支持单个行为和多个行为。")])]),t._v(" "),s("h4",{attrs:{id:"removeaction-action-string-string-void"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#removeaction-action-string-string-void"}},[t._v("#")]),t._v(" removeAction(action?: string | string[]): void")]),t._v(" "),s("blockquote",[s("p",[t._v("移除默认行为操作。\n若参数为空，默认移除所有默认行为。")])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"事件绑定-解绑"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件绑定-解绑"}},[t._v("#")]),t._v(" 事件绑定/解绑")]),t._v(" "),s("h4",{attrs:{id:"on-evt-string-string-callback-args-unknown-void-void"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#on-evt-string-string-callback-args-unknown-void-void"}},[t._v("#")]),t._v(" on(evt: string | string[], callback: (...args: unknown[]) => void): void")]),t._v(" "),s("blockquote",[s("p",[t._v("绑定事件。")]),t._v(" "),s("ul",[s("li",[t._v("具体可绑定的事件类型可查看关于 Event 的介绍。")]),t._v(" "),s("li",[t._v("参数支持单个或者批量绑定。")])])]),t._v(" "),s("h4",{attrs:{id:"emit-evt-string-args-unknown-void"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#emit-evt-string-args-unknown-void"}},[t._v("#")]),t._v(" emit(evt: string, ...args: unknown[]): void")]),t._v(" "),s("blockquote",[s("p",[t._v("触发事件。")])]),t._v(" "),s("h4",{attrs:{id:"off-evt-string-callback-args-unknown-void-void"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#off-evt-string-callback-args-unknown-void-void"}},[t._v("#")]),t._v(" off(evt?: string, callback?: (...args: unknown[]) => void): void")]),t._v(" "),s("blockquote",[s("p",[t._v("解绑事件。\n若参数为空，默认解绑所有已绑定事件。")])]),t._v(" "),s("h4",{attrs:{id:"getevent"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getevent"}},[t._v("#")]),t._v(" getEvent()")]),t._v(" "),s("blockquote",[s("p",[t._v("获取所有事件队列。")])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#布局"}},[t._v("#")]),t._v(" 布局")]),t._v(" "),s("h4",{attrs:{id:"layout-options-ilayout-void"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#layout-options-ilayout-void"}},[t._v("#")]),t._v(" layout(options: ILayout): void")]),t._v(" "),s("blockquote",[s("p",[t._v("对画布内容进行自动布局。")]),t._v(" "),s("p",[t._v("options "),s("a",{attrs:{href:"https://github.com/dagrejs/dagre/wiki",target:"_blank",rel:"noopener noreferrer"}},[t._v("参数说明"),s("OutboundLink")],1)])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"操作栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#操作栈"}},[t._v("#")]),t._v(" 操作栈")]),t._v(" "),s("h4",{attrs:{id:"undo-void"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#undo-void"}},[t._v("#")]),t._v(" undo(): void")]),t._v(" "),s("blockquote",[s("p",[t._v("执行撤销操作。")])]),t._v(" "),s("h4",{attrs:{id:"redo-void"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redo-void"}},[t._v("#")]),t._v(" redo(): void")]),t._v(" "),s("blockquote",[s("p",[t._v("执行回撤操作。")])]),t._v(" "),s("h4",{attrs:{id:"pushstack-type-string-data-idatastack-stacktype-string-void"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pushstack-type-string-data-idatastack-stacktype-string-void"}},[t._v("#")]),t._v(" pushStack(type: string, data: IDataStack, stackType?: string): void")]),t._v(" "),s("blockquote",[s("p",[t._v("将操作推入撤销/回撤栈中。")]),t._v(" "),s("p",[t._v("stackType 默认为 'undo'。即推入撤销栈中。若 stackType 为 'redo', 即会推入回撤栈中。")])]),t._v(" "),s("h4",{attrs:{id:"getundostack-istack"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getundostack-istack"}},[t._v("#")]),t._v(" getUndoStack(): IStack[]")]),t._v(" "),s("blockquote",[s("p",[t._v("获取撤销栈内容。")])]),t._v(" "),s("h4",{attrs:{id:"getredostack-istack"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getredostack-istack"}},[t._v("#")]),t._v(" getRedoStack(): IStack[]")]),t._v(" "),s("blockquote",[s("p",[t._v("获取回撤栈内容。")])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"坐标转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#坐标转换"}},[t._v("#")]),t._v(" 坐标转换")]),t._v(" "),s("h4",{attrs:{id:"getpointbyclient-originx-number-originy-number-x-number-y-number"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getpointbyclient-originx-number-originy-number-x-number-y-number"}},[t._v("#")]),t._v(" getPointByClient(originX: number, originY: number): {x: number, y:number}")]),t._v(" "),s("blockquote",[s("p",[t._v("将屏幕/页面坐标转换为画布内视口坐标。")])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"销毁画布"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#销毁画布"}},[t._v("#")]),t._v(" 销毁画布")]),t._v(" "),s("h4",{attrs:{id:"destroy-void"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#destroy-void"}},[t._v("#")]),t._v(" destroy(): void")]),t._v(" "),s("blockquote",[s("p",[t._v("销毁画布。自动解绑事件，删除无用实例。")])]),t._v(" "),s("hr")])}),[],!1,null,null,null);a.default=r.exports}}]);